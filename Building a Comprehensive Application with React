import React, { useReducer, useState } from "react";

const initialState = {
  name: "",
  establishment_year: "",
  address: {
    building: "",
    street: "",
    city: {
      name: "",
      locality: {
        pinCode: "",
        landmark: ""
      }
    },
    state: "",
    coordinates: { latitude: "", longitude: "" }
  },
  courses_offered: []
};

function reducer(state, action) {
  switch (action.type) {
    case "name":
      return { ...state, name: action.payload };
    case "establishment_year":
      return { ...state, establishment_year: action.payload };
    case "building":
      return { ...state, address: { ...state.address, building: action.payload } };
    case "street":
      return { ...state, address: { ...state.address, street: action.payload } };
    case "city_name":
      return {
        ...state,
        address: {
          ...state.address,
          city: { ...state.address.city, name: action.payload }
        }
      };
    case "pinCode":
      return {
        ...state,
        address: {
          ...state.address,
          city: {
            ...state.address.city,
            locality: { ...state.address.city.locality, pinCode: action.payload }
          }
        }
      };
    case "landmark":
      return {
        ...state,
        address: {
          ...state.address,
          city: {
            ...state.address.city,
            locality: { ...state.address.city.locality, landmark: action.payload }
          }
        }
      };
    case "state_name":
      return { ...state, address: { ...state.address, state: action.payload } };
    case "latitude":
      return {
        ...state,
        address: {
          ...state.address,
          coordinates: { ...state.address.coordinates, latitude: action.payload }
        }
      };
    case "longitude":
      return {
        ...state,
        address: {
          ...state.address,
          coordinates: { ...state.address.coordinates, longitude: action.payload }
        }
      };
    case "courses_offered":
      return { ...state, courses_offered: action.payload.split(",").map(c => c.trim()) };
    case "reset":
      return initialState;
    default:
      throw new Error("invalid action type");
  }
}

export default function App() {
  const [state, dispatch] = useReducer(reducer, initialState);
  const [submitted, setSubmitted] = useState(false);
  const [errorMsg, setErrorMsg] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    try {
      setErrorMsg("");
      setSubmitted(true);
    } catch (error) {
      setErrorMsg(error.message);
    }
  };

  const handleReset = () => {
    dispatch({ type: "reset" });
    setSubmitted(false);
    setErrorMsg("");
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial", maxWidth: "600px" }}>
      <h2>College Form</h2>
      {errorMsg && <div style={{ color: "red" }}>{errorMsg}</div>}
      <form onSubmit={handleSubmit}>
        <input placeholder="College Name" value={state.name} onChange={(e) => dispatch({ type: "name", payload: e.target.value })} />
        <input placeholder="Establishment Year" value={state.establishment_year} onChange={(e) => dispatch({ type: "establishment_year", payload: e.target.value })} />
        <input placeholder="Building" value={state.address.building} onChange={(e) => dispatch({ type: "building", payload: e.target.value })} />
        <input placeholder="Street" value={state.address.street} onChange={(e) => dispatch({ type: "street", payload: e.target.value })} />
        <input placeholder="City" value={state.address.city.name} onChange={(e) => dispatch({ type: "city_name", payload: e.target.value })} />
        <input placeholder="Pincode" value={state.address.city.locality.pinCode} onChange={(e) => dispatch({ type: "pinCode", payload: e.target.value })} />
        <input placeholder="Landmark" value={state.address.city.locality.landmark} onChange={(e) => dispatch({ type: "landmark", payload: e.target.value })} />
        <input placeholder="State" value={state.address.state} onChange={(e) => dispatch({ type: "state_name", payload: e.target.value })} />
        <input placeholder="Latitude" value={state.address.coordinates.latitude} onChange={(e) => dispatch({ type: "latitude", payload: e.target.value })} />
        <input placeholder="Longitude" value={state.address.coordinates.longitude} onChange={(e) => dispatch({ type: "longitude", payload: e.target.value })} />
        <input placeholder="Courses Offered (comma separated)" value={state.courses_offered.join(", ")} onChange={(e) => dispatch({ type: "courses_offered", payload: e.target.value })} />
        <div style={{ marginTop: "10px" }}>
          <button type="submit" style={{ marginRight: "10px" }}>Submit</button>
          <button type="button" onClick={handleReset}>Reset</button>
        </div>
      </form>

      {submitted && (
        <div style={{ marginTop: "20px" }}>
          <h3>Submitted College Details</h3>
          <div>Name: {state.name}</div>
          <div>Establishment Year: {state.establishment_year}</div>
          <div>
            Address: {state.address.building}, {state.address.street}, {state.address.city.name}, {state.address.state}, Pincode: {state.address.city.locality.pinCode}, Landmark: {state.address.city.locality.landmark}
          </div>
          <div>Coordinates: {state.address.coordinates.latitude}, {state.address.coordinates.longitude}</div>
          <div>Courses Offered: {state.courses_offered.join(", ")}</div>
        </div>
      )}
    </div>
  );
}
