import React, { useState, useEffect, useRef } from "react";

function useTimer() {
  const [timer, setTimer] = useState(0);
  const [isRunning, setIsRunning] = useState(false);
  const intervalRef = useRef(null);
  const startTimer = () => {
    if (!isRunning) {
      setIsRunning(true);
      intervalRef.current = setInterval(() => {
        setTimer((prev) => prev + 1);
      }, 1000);
    }
  };
  const stopTimer = () => {
    if (isRunning) {
      clearInterval(intervalRef.current);
      setIsRunning(false);
    }
  };
  const resetTimer = () => {
    clearInterval(intervalRef.current);
    setIsRunning(false);
    setTimer(0);
  };
  useEffect(() => {
    return () => clearInterval(intervalRef.current);
  }, []);
  return { timer, isRunning, startTimer, stopTimer, resetTimer };
}

function TimerComponentA() {
  const { timer, isRunning, startTimer, stopTimer, resetTimer } = useTimer();
  return (
    <div>
      <h2>Timer A: {timer}s</h2>
      <button onClick={startTimer} disabled={isRunning}>Start</button>
      <button onClick={stopTimer} disabled={!isRunning}>Stop</button>
      <button onClick={resetTimer}>Reset</button>
    </div>
  );
}

function TimerComponentB() {
  const { timer, isRunning, startTimer, stopTimer, resetTimer } = useTimer();
  return (
    <div>
      <h2>Timer B: {timer}s</h2>
      <button onClick={startTimer} disabled={isRunning}>Start</button>
      <button onClick={stopTimer} disabled={!isRunning}>Stop</button>
      <button onClick={resetTimer}>Reset</button>
    </div>
  );
}

export default function App() {
  return (
    <div style={{ padding: "20px" }}>
      <TimerComponentA />
      <hr />
      <TimerComponentB />
    </div>
  );
}
