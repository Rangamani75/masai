<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>React Timer Confirmation</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 30px;
    }
    .green { color: green; }
    .red { color: red; }
  </style>
</head>
<body>
  <div id="root"></div>

  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-router-dom@6/umd/react-router-dom.development.js" crossorigin></script>

  <script type="text/javascript">
    const { useState, useEffect } = React;
    const { createRoot } = ReactDOM;
    const { BrowserRouter, Routes, Route, useNavigate } = ReactRouterDOM;

    function Home() {
      const [showConfirm, setShowConfirm] = useState(false);
      const [timer, setTimer] = useState(10);
      const navigate = useNavigate();

      useEffect(() => {
        let interval;
        if (showConfirm && timer > 0) {
          interval = setInterval(() => {
            setTimer(prev => prev - 1);
          }, 1000);
        } else if (timer === 0) {
          setShowConfirm(false);
          setTimer(10);
        }
        return () => clearInterval(interval);
      }, [showConfirm, timer]);

      const handleFetchClick = () => {
        setShowConfirm(true);
        setTimer(10);
      };

      const handleYes = () => navigate("/data");
      const handleNo = () => {
        setShowConfirm(false);
        setTimer(10);
      };

      return (
        <div>
          {!showConfirm ? (
            <button onClick={handleFetchClick}>Fetch Data</button>
          ) : (
            <div>
              <h3>Are you sure you want to fetch the data?</h3>
              <h2 className={timer > 5 ? "green" : "red"}>{timer}</h2>
              <button onClick={handleYes}>Yes</button>
              <button onClick={handleNo} style={{ marginLeft: "10px" }}>No</button>
            </div>
          )}
        </div>
      );
    }

    function DataPage() {
      const [posts, setPosts] = useState([]);

      useEffect(() => {
        fetch("https://jsonplaceholder.typicode.com/posts")
          .then(res => res.json())
          .then(data => setPosts(data))
          .catch(err => console.error("Error:", err));
      }, []);

      return (
        <div>
          <h2>Fetched Post Titles</h2>
          <ul>
            {posts.map(post => (
              <li key={post.id}>üìù {post.title}</li>
            ))}
          </ul>
        </div>
      );
    }

    function App() {
      return (
        <BrowserRouter>
          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/data" element={<DataPage />} />
          </Routes>
        </BrowserRouter>
      );
    }

    const root = createRoot(document.getElementById("root"));
    root.render(<App />);
  </script>
</body>
</html>
