<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Firebase CRUD App</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="p-4">
  <div class="container">
    <h2 class="mb-4">Firebase CRUD - User Manager</h2>

    <form id="userForm" class="mb-4">
      <div class="mb-2">
        <input type="text" id="name" placeholder="Name" class="form-control" required />
      </div>
      <div class="mb-2">
        <input type="email" id="email" placeholder="Email" class="form-control" required />
      </div>
      <button type="submit" class="btn btn-primary">Add User</button>
    </form>

    <div id="loading" class="mb-3 text-secondary">Loading...</div>
    <table class="table table-bordered">
      <thead>
        <tr><th>Name</th><th>Email</th><th>Actions</th></tr>
      </thead>
      <tbody id="userTable"></tbody>
    </table>
  </div>

  <!-- Edit Modal -->
  <div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <form id="editForm">
          <div class="modal-header"><h5>Edit User</h5></div>
          <div class="modal-body">
            <input type="text" id="editName" class="form-control mb-2" required />
            <input type="email" id="editEmail" class="form-control" required />
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-success">Update</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const dbUrl = "https://creating-movie-default-rtdb.asia-southeast1.firebasedatabase.app/users";
    const userForm = document.getElementById("userForm");
    const nameInput = document.getElementById("name");
    const emailInput = document.getElementById("email");
    const userTable = document.getElementById("userTable");
    const loading = document.getElementById("loading");

    const editModal = new bootstrap.Modal(document.getElementById("editModal"));
    const editName = document.getElementById("editName");
    const editEmail = document.getElementById("editEmail");
    let editUserId = null;

    userForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const user = { name: nameInput.value.trim(), email: emailInput.value.trim() };
      loading.textContent = "Adding user...";
      await fetch(`${dbUrl}.json`, {
        method: "POST",
        body: JSON.stringify(user),
        headers: { "Content-Type": "application/json" }
      });
      userForm.reset();
      fetchUsers();
    });

    async function fetchUsers() {
      loading.textContent = "Loading users...";
      const res = await fetch(`${dbUrl}.json`);
      const data = await res.json();
      userTable.innerHTML = "";
      if (data) {
        Object.entries(data).forEach(([id, user]) => {
          const row = document.createElement("tr");
          row.innerHTML = `
            <td>${user.name}</td>
            <td>${user.email}</td>
            <td>
              <button class="btn btn-sm btn-warning me-2" onclick="openEdit('${id}', '${user.name}', '${user.email}')">Edit</button>
              <button class="btn btn-sm btn-danger" onclick="deleteUser('${id}')">Delete</button>
            </td>
          `;
          userTable.appendChild(row);
        });
      }
      loading.textContent = "";
    }

    function openEdit(id, name, email) {
      editUserId = id;
      editName.value = name;
      editEmail.value = email;
      editModal.show();
    }

    document.getElementById("editForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const updatedUser = { name: editName.value.trim(), email: editEmail.value.trim() };
      loading.textContent = "Updating user...";
      await fetch(`${dbUrl}/${editUserId}.json`, {
        method: "PUT",
        body: JSON.stringify(updatedUser),
        headers: { "Content-Type": "application/json" }
      });
      editModal.hide();
      fetchUsers();
    });

    async function deleteUser(id) {
      loading.textContent = "Deleting user...";
      await fetch(`${dbUrl}/${id}.json`, { method: "DELETE" });
      fetchUsers();
    }

    fetchUsers();
  </script>
</body>
</html>
